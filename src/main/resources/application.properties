spring.application.name=Sistema_de_Inventarios_v02

# MySQL Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/sistemainventario}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:12345678}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# IMPORTANT: Hibernate Envers Configuration
spring.jpa.properties.org.hibernate.envers.revision_field_name=REV
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=REVTYPE
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_audit
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
spring.jpa.properties.org.hibernate.envers.audit_strategy=org.hibernate.envers.strategy.DefaultAuditStrategy

# Flyway Configuration - HABILITADO
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=false
spring.flyway.encoding=UTF-8

# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false

# Configuración OAuth2 para Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=inventory-system
spring.security.oauth2.client.registration.keycloak.client-secret=bbo4OjQyxY33TfevXRGDlcjGCXsIMTcH
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak

# Configuración del provider Keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/inventory-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/certs
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_basic
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

server.port=8081

# URLs de Keycloak para logout
keycloak.logout-url=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/logout
app.base-url=http://localhost:8081

# Configuración de sesiones para mejor control de logout
server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.max-age=1800
server.servlet.session.timeout=30m

# Headers de seguridad para prevenir cache de páginas autenticadas
spring.security.headers.cache-control=true
spring.security.headers.content-type=true
spring.security.headers.frame=deny

# Debug logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.web.authentication.logout=DEBUG
logging.level.com.sistema_de_inventarios_v02=DEBUG

# Logging específico para logout
logging.level.org.springframework.security.web.authentication.logout.LogoutFilter=TRACE
logging.level.org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler=TRACE

# Configuración JWT para API externa
jwt.secret=${JWT_SECRET:myVerySecretKeyForInventorySystemThatShouldBeSecureAndLong2024!}
jwt.expiration=${JWT_EXPIRATION:86400}

# application.properties
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/inventory-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/inventory-realm/protocol/openid-connect/certs

